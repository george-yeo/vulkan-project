name: Oyster Engine CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest] # Add macos-latest if needed
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Vulkan SDK Path (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "VULKAN_SDK=${{ github.workspace }}/extern/VulkanSDK/Windows" >> $GITHUB_ENV
          echo "${{ github.workspace }}/extern/VulkanSDK/Windows/Bin" >> $GITHUB_PATH

      - name: Set Vulkan SDK Path (Linux)
        if: runner.os == 'Linux'
        run: |
          echo "VULKAN_SDK=${{ github.workspace }}/extern/VulkanSDK/Linux" >> $GITHUB_ENV
          echo "${{ github.workspace }}/extern/VulkanSDK/Linux/Bin" >> $GITHUB_PATH

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake ninja-build xorg-dev libglfw3-dev libglm-dev
        if: runner.os == 'Linux'

      - name: Configure CMake
        run: cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build Vulkan Engine
        run: cmake --build build --config Release

      - name: Run Tests
        working-directory: build
        run: ctest --output-on-failure
