name: Vulkan Game Engine CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest] # Add macos-latest if needed
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Vulkan SDK (Windows)
        if: runner.os == 'Windows'
        run: |
          Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/latest/windows/vulkan-sdk.exe" -OutFile "vulkan-sdk.exe"
          Start-Process -FilePath "vulkan-sdk.exe" -ArgumentList "/S" -NoNewWindow -Wait
          echo "VULKAN_SDK=C:\VulkanSDK\1.3.250.1" >> $GITHUB_ENV
          echo "C:\VulkanSDK\1.3.250.1\Bin" >> $GITHUB_PATH
        shell: powershell

      - name: Install Vulkan SDK (Linux)
        if: runner.os == 'Linux'
        run: |
          wget -qO vulkan-sdk.tar.gz https://sdk.lunarg.com/sdk/latest/linux/vulkan-sdk.tar.gz
          tar -xzf vulkan-sdk.tar.gz
          export VULKAN_SDK=$GITHUB_WORKSPACE/$(ls | grep VulkanSDK)
          echo "VULKAN_SDK=$VULKAN_SDK" >> $GITHUB_ENV
          echo "$VULKAN_SDK/bin" >> $GITHUB_PATH

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake ninja-build xorg-dev libglfw3-dev libglm-dev
        if: runner.os == 'Linux'

      - name: Configure CMake
        run: cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build Vulkan Engine
        run: cmake --build build --config Release

      - name: Run Tests
        working-directory: build
        run: ctest --output-on-failure
