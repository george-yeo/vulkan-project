name: Vulkan CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install cmake vulkan-sdk gtest gcov lcov checkstyle
      - name: Build project
        run: |
          cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-ftest-coverage" .
          make
      - name: Run tests and generate coverage
        run: |
          ctest --output-on-failure
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info /usr/src/ --output-file coverage.info
          genhtml coverage.info --output-directory coverage
      - name: Check code style
        run: |
          checkstyle -c checkstyle.xml src/ tests/

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          choco install cmake vulkan-sdk gtest gcov lcov checkstyle
      - name: Build project
        run: |
          cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-ftest-coverage" .
          cmake --build . --config Debug
      - name: Run tests and generate coverage
        run: |
          ctest --output-on-failure
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info /usr/src/ --output-file coverage.info
          genhtml coverage.info --output-directory coverage
      - name: Check code style
        run: |
          checkstyle -c checkstyle.xml src/ tests/

  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          brew install cmake vulkan-sdk gtest gcov lcov checkstyle
      - name: Build project
        run: |
          cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-ftest-coverage" .
          make
      - name: Run tests and generate coverage
        run: |
          ctest --output-on-failure
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info /usr/src/ --output-file coverage.info
          genhtml coverage.info --output-directory coverage
      - name: Check code style
        run: |
          checkstyle -c checkstyle.xml src/ tests/
          
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Doxygen
        run: sudo apt-get install doxygen
      - name: Generate documentation
        run: doxygen
      - name: Upload documentation to GitHub Pages
        uses: actions/deploy-pages@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          folder: docs
