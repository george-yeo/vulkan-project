name: Vulkan CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-cmake-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-cmake
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install cmake lcov doxygen checkstyle libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev libwayland-dev libxkbcommon-dev libglfw3-dev libglm-dev 
      - name: Setup VulkanCI
        uses: NcStudios/VulkanCI@v1.1
      - name: Build project
        run: |
          cmake -DCMAKE_BUILD_TYPE=Debug -DCOMPILE_SHADERS=OFF -DENABLE_CHECKSTYLE=OFF -DCMAKE_CXX_FLAGS="-ftest-coverage" .
          make
      - name: Run tests and generate coverage
        run: |
          ctest --output-on-failure
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/tests/*' --output-file coverage.info
          lcov --list coverage.info
      - name: Verify coverage file exists
        run: ls -la ./build
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: coverage.info
          fail_ci_if_error: true
          verbose: true

  build-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: build
          key: ${{ runner.os }}-cmake-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-cmake
      - name: Install dependencies
        run: |
          choco install cmake lcov doxygen.install glfw3
      - name: Setup VulkanCI
        uses: NcStudios/VulkanCI@v1.1
      - name: Build project
        run: |
          cmake -DCMAKE_BUILD_TYPE=Debug -DCOMPILE_SHADERS=OFF -DENABLE_CHECKSTYLE=OFF -DCMAKE_CXX_FLAGS="-ftest-coverage" .
          cmake --build . --config Debug
      - name: Run tests and generate coverage
        run: |
          ctest --output-on-failure
# lcov --capture --directory . --output-file coverage.info
# lcov --remove coverage.info /usr/src/ --output-file coverage.info
# genhtml coverage.info --output-directory coverage

  # build-macos:
  #   runs-on: macos-latest

  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install dependencies
  #       run: |
  #         brew install cmake lcov checkstyle libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev libwayland-dev libxkbcommon-dev libglfw3-dev libglm-dev
  #     - name: Setup VulkanCI
  #       uses: NcStudios/VulkanCI@v1.1
  #     - name: Build project
  #       run: |
  #         cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-ftest-coverage" .
  #         make
  #     - name: Run tests and generate coverage
  #       run: |
  #         ctest --output-on-failure
  #         lcov --capture --directory . --output-file coverage.info
  #         lcov --remove coverage.info /usr/src/ --output-file coverage.info
  #         genhtml coverage.info --output-directory coverage
  #     - name: Check code style
  #       run: |
  #         checkstyle -c checkstyle.xml src/ tests/
          
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Doxygen
        run: sudo apt-get install doxygen
      - name: Generate documentation
        run: doxygen
      - name: Upload documentation to GitHub Pages
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/
